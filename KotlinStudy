一,概述	
	携程
		 是一个轻量级的线程。实现起来简单，资源消耗小。
	多平台
		使用场景
		Android――iOS
		移动平台之间共享代码是 Kotlin 多平台的主要使用场景之一，现在可以通过在 Android 与 iOS 之间共享部分代码（如业务逻辑、连接等） 来构建移动应用。
		
		客户端――服务端
		代码共享可以带来收益的另一个场景是互联应用，其中的逻辑可以在服务器与运行在浏览器中的客户端中复用。Kotlin 多平台也覆盖了这个场景。
		
		Ktor 框架适用于在互联系统中构建异步的服务器与客户端。
		
二，新特性
	1.3的新特性
	（1）携程正式发布
	   Kotlin 1.3 起，协程的语言支持与 API 已完全稳定。Kotlin 1.3 引入了挂起函数的可调用引用以及在反射 API 中对协程的支持。
	（2）多平台项目
                     在 1.3 中，我们完全修改了多平台项目的模型，以提高表现力与灵活性，并使共享公共代码更加容易。此外，多平台项目现在也支持 Kotlin/Native！
	（3） 契约
	Kotlin 编译器会做大量的静态分析工作，以提供警告并减少模版代码。其中最显著的特性之一就是智能转换――能够根据类型检测自动转换类型。
	
	
	eclipse	契约的引用库是什么？？？